<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.dao.IMessageDao">
<!-- 新增的方法写在这里 -->


<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into message 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.senderId != null">SenderId,</if>
            <if test="Vo.receiverId != null">ReceiverId,</if>
            <if test="Vo.content != null">Content,</if>
            <if test="Vo.createDate != null">CreateDate,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.senderId != null">#{Vo.senderId},</if>
            <if test="Vo.receiverId != null">#{Vo.receiverId},</if>
            <if test="Vo.content != null">#{Vo.content},</if>
            <if test="Vo.createDate != null">#{Vo.createDate},</if>
            
		</trim>
	</insert>
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From message
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From message
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update message
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.senderId != null">SenderId = #{Vo.senderId},</if>
            <if test="Vo.receiverId != null">ReceiverId = #{Vo.receiverId},</if>
            <if test="Vo.content != null">Content = #{Vo.content},</if>
            <if test="Vo.createDate != null">CreateDate = #{Vo.createDate},</if>
		</trim>
		Where message.id = #{Vo.id}
	</update>
    
    <resultMap type="MessageVo" id="RM_Default">
        <id column="Message_id" property="id"/>
        <result column="Message_senderId" property="senderId"/>
        <result column="Message_receiverId" property="receiverId"/>
        <result column="Message_content" property="content"/>
        <result column="Message_createDate" property="createDate"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="MessageVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	message	As	message
		Where
		message.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	message	As	message
		Where
		message.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(message.id)
		From	message	As	message
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="MessageVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{MessageSearch.chooseRM} As _chooseRM
		From	message	As	message
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{MessageSearch.offset},#{MessageSearch.limit}
	</select>
    

    <resultMap type="MessageVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Message_id" property="id"/>
        <result column="Message_senderId" property="senderId"/>
        <result column="Message_receiverId" property="receiverId"/>
        <result column="Message_content" property="content"/>
        <result column="Message_createDate" property="createDate"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	message	As	message
		Where
		message.id = #{id}
	</select>
    
    <resultMap type="MessageVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Message_id" property="id"/>
        <result column="Message_senderId" property="senderId"/>
        <result column="Message_receiverId" property="receiverId"/>
        <result column="Message_content" property="content"/>
        <result column="Message_createDate" property="createDate"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	message	As	message
		Where
		message.id = #{id}
	</select>
    
    <resultMap type="MessageVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Message_id" property="id"/>
        <result column="Message_senderId" property="senderId"/>
        <result column="Message_receiverId" property="receiverId"/>
        <result column="Message_content" property="content"/>
        <result column="Message_createDate" property="createDate"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	message	As	message
		Where
		message.id = #{id}
	</select>
    
    <resultMap type="MessageVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Message_id" property="id"/>
        <result column="Message_senderId" property="senderId"/>
        <result column="Message_receiverId" property="receiverId"/>
        <result column="Message_content" property="content"/>
        <result column="Message_createDate" property="createDate"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        message.MessageId As Message_messageId,
        message.SenderId As Message_senderId,
        message.ReceiverId As Message_receiverId,
        message.Content As Message_content,
        message.CreateDate As Message_createDate,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="MessageSearch.sort != null">
                    Message_${MessageSearch.sort} 
                    <if test="MessageSearch.order != null">
                        ${MessageSearch.order}
                    </if>
                </when>
                <otherwise>
                    Message_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="MessageSearch.eqMessageId != null">
			<![CDATA[ And message.MessageId = #{MessageSearch.eqMessageId} ]]>
		</if>
		<if test="MessageSearch.neMessageId != null">
			<![CDATA[ And message.MessageId != #{MessageSearch.neMessageId} ]]>
		</if>
        <if test="MessageSearch.eqSenderId != null">
			<![CDATA[ And message.SenderId = #{MessageSearch.eqSenderId} ]]>
		</if>
		<if test="MessageSearch.neSenderId != null">
			<![CDATA[ And message.SenderId != #{MessageSearch.neSenderId} ]]>
		</if>
        <if test="MessageSearch.eqReceiverId != null">
			<![CDATA[ And message.ReceiverId = #{MessageSearch.eqReceiverId} ]]>
		</if>
		<if test="MessageSearch.neReceiverId != null">
			<![CDATA[ And message.ReceiverId != #{MessageSearch.neReceiverId} ]]>
		</if>
        <if test="MessageSearch.eqContent != null">
			<![CDATA[ And message.Content = #{MessageSearch.eqContent} ]]>
		</if>
		<if test="MessageSearch.lkContent != null">
			<![CDATA[ And message.Content Like '%${MessageSearch.lkContent}%' ]]>
		</if>
        <if test="MessageSearch.eqCreateDate != null">
			<![CDATA[ And date_format(message.CreateDate,'%Y-%m-%d') = date_format(#{MessageSearch.eqCreateDate},'%Y-%m-%d') ]]>
		</if>
		<if test="MessageSearch.geCreateDate != null">
			<![CDATA[ And message.CreateDate >= #{MessageSearch.geCreateDate} ]]>
		</if>
		<if test="MessageSearch.ltCreateDate != null">
			<![CDATA[ And message.CreateDate < #{MessageSearch.ltCreateDate} ]]>
		</if>
        
    </sql>
</mapper>


