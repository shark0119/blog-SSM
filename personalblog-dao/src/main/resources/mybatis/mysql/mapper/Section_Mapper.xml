<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.dao.ISectionDao">
<!-- 新增的方法写在这里 -->
	<!--查询所有的Section  -->
	<select id="getAllSections" resultType="SectionVo">
		select * from section s order by s.sectionid asc
	</select>
	<!--增加Section  -->
    <insert id="addSection" parameterType="SectionVo">
    	insert into section(sectionName,visiable,keyword,description)
    	values(#{sectionName},#{visiable},#{keyWord},#{description})
    </insert>
    <!--修改Section  -->
    <update id="updateSection" parameterType="SectionVo">
    	update section
    	<set>
    		<if test="sectionName!=null">
    			sectionname=#{sectionName},
    		</if>
    		<if test="visiable!=null">
    			visiable=#{visiable},
    		</if>
    		<if test="keyWord!=null">
    			keyword=#{keyWord},
    		</if>
    		<if test="description!=null">
    			description=#{description}
    		</if>
    	</set>
    	where sectionid=#{sectionId}
    </update>
    <!--删除Section根据id  -->
    <delete id="deleteSection" parameterType="Integer">
    	delete from section where sectionid=#{id}
    </delete>
    <!--根据用户名能否获取  -->
    <select id="getSectionVoByName" resultType="SectionVo" parameterType="String">
    	select * from section
    	where sectionname=#{sectionName}
    
    </select>
    
    <!--查询当前引用此栏目的总数  -->
    <select id="getAllSectionCount" resultType="Integer" parameterType="Integer">
    	select count(1) from blog b 
    	inner join section s on s.sectionid=b.sectionid
    	where s.sectionid=#{sectionid}
    </select>
    <!--根据id找到该实体  -->
    <select id="getSectionById" resultType="SectionVo" parameterType="Integer">
    	select * from section where sectionid=#{sectionid}
    </select>

<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into section 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.sectionName != null">SectionName,</if>
            <if test="Vo.visiable != null">Visiable,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.sectionName != null">#{Vo.sectionName},</if>
            <if test="Vo.visiable != null">#{Vo.visiable},</if>
            
		</trim>
	</insert>
	
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From section
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From section
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update section
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.sectionName != null">SectionName = #{Vo.sectionName},</if>
            <if test="Vo.visiable != null">Visiable = #{Vo.visiable},</if>
		</trim>
		Where section.id = #{Vo.id}
	</update>
    
    <resultMap type="SectionVo" id="RM_Default">
        <id column="Section_id" property="id"/>
        <result column="Section_sectionName" property="sectionName"/>
        <result column="Section_visiable" property="visiable"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="SectionVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	section	As	section
		Where
		section.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	section	As	section
		Where
		section.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(section.id)
		From	section	As	section
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="SectionVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{SectionSearch.chooseRM} As _chooseRM
		From	section	As	section
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{SectionSearch.offset},#{SectionSearch.limit}
	</select>
    

    <resultMap type="SectionVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Section_id" property="id"/>
        <result column="Section_sectionName" property="sectionName"/>
        <result column="Section_visiable" property="visiable"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	section	As	section
		Where
		section.id = #{id}
	</select>
    
    <resultMap type="SectionVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Section_id" property="id"/>
        <result column="Section_sectionName" property="sectionName"/>
        <result column="Section_visiable" property="visiable"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	section	As	section
		Where
		section.id = #{id}
	</select>
    
    <resultMap type="SectionVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Section_id" property="id"/>
        <result column="Section_sectionName" property="sectionName"/>
        <result column="Section_visiable" property="visiable"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	section	As	section
		Where
		section.id = #{id}
	</select>
    
    <resultMap type="SectionVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Section_id" property="id"/>
        <result column="Section_sectionName" property="sectionName"/>
        <result column="Section_visiable" property="visiable"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        section.SectionId As Section_sectionId,
        section.SectionName As Section_sectionName,
        section.Visiable As Section_visiable,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="SectionSearch.sort != null">
                    Section_${SectionSearch.sort} 
                    <if test="SectionSearch.order != null">
                        ${SectionSearch.order}
                    </if>
                </when>
                <otherwise>
                    Section_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="SectionSearch.eqSectionId != null">
			<![CDATA[ And section.SectionId = #{SectionSearch.eqSectionId} ]]>
		</if>
		<if test="SectionSearch.neSectionId != null">
			<![CDATA[ And section.SectionId != #{SectionSearch.neSectionId} ]]>
		</if>
        <if test="SectionSearch.eqSectionName != null">
			<![CDATA[ And section.SectionName = #{SectionSearch.eqSectionName} ]]>
		</if>
		<if test="SectionSearch.lkSectionName != null">
			<![CDATA[ And section.SectionName Like '%${SectionSearch.lkSectionName}%' ]]>
		</if>
        <if test="SectionSearch.eqVisiable != null">
			<![CDATA[ And section.Visiable = #{SectionSearch.eqVisiable} ]]>
		</if>
		<if test="SectionSearch.neVisiable != null">
			<![CDATA[ And section.Visiable != #{SectionSearch.neVisiable} ]]>
		</if>
    </sql>
</mapper>


