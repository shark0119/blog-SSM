<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
	default-lazy-init="true">

	<description>Spring的事务管理配置文件</description>

	<!-- ###事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务管理器### -->
	
	<!-- ### 启用注解式事务 
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<tx:advice id="" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	启用注解式事务 ### -->

	<!--###配置事务的传播特性 
	* PROPAGATION_REQUIRED：支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。 <br/>
 	* PROPAGATION_SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行。 <br/>
 	* PROPAGATION_MANDATORY：支持当前事务，如果当前没有事务，就抛出异常。 <br/>
 	* PROPAGATION_REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起。<br/>
 	* PROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。 <br/>
 	* PROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。 <br/>
 	* PROPAGATION_NESTED：支持当前事务，如果当前事务存在，则执行一个嵌套事务，如果当前没有事务，就新建一个事务<br/>
	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			
			 <!--添加的配置 -->
			<tx:method name="addBlogcontent" propagation="REQUIRED" />
			<tx:method name="addBlog" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<!-- 添加的配置 -->
			
			
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			
			<tx:method name="do*" propagation="REQUIRED" />
			
			<tx:method name="is*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="select*" propagation="REQUIRED" read-only="true" />
			
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!--配置事务的传播特性### -->

	<!--###定义参与事务的切面 
	①显式使用CGLib动态代理
	②希望对Mgr所有方法实施事务增强
	-->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allManagerMethod" expression="execution(* com.hfxt.service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice" />
	</aop:config>
	<!--定义参与事务的切面### -->
	
	
</beans>